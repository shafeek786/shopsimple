{{>header2}}
<!DOCTYPE html>
  <html lang="en">

  <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/AlertifyJS/1.13.1/css/alertify.min.css" />

    <style>
      body {
        color: #69707a;
      }

      .img-account-profile {
        height: 10rem;
      }

      .rounded-circle {
        border-radius: 50% !important;
      }

      .card {
        box-shadow: 0 0.15rem 1.75rem 0 rgb(33 40 50 / 15%);
      }

      .card .card-header {
        font-weight: 500;
      }

      .card-header:first-child {
        border-radius: 0.35rem 0.35rem 0 0;
      }

      .card-header {
        padding: 1rem 1.35rem;
        margin-bottom: 0;
        background-color: rgba(33, 40, 50, 0.03);
        border-bottom: 1px solid rgba(33, 40, 50, 0.125);
      }

      .form-control,
      .dataTable-input {
        display: block;
        width: 100%;
        padding: 0.875rem 1.125rem;
        font-size: 0.875rem;
        font-weight: 400;
        line-height: 1;
        color: #69707a;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #c5ccd6;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: 0.35rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
      }

      .nav-borders .nav-link.active {
        color: #0061f2;
        border-bottom-color: #0061f2;
      }

      .nav-borders .nav-link {
        color: #69707a;
        border-bottom-width: 0.125rem;
        border-bottom-style: solid;
        border-bottom-color: transparent;
        padding-top: 0.5rem;
        padding-bottom: 0.5rem;
        padding-left: 0;
        padding-right: 0;
        margin-left: 1rem;
        margin-right: 1rem;
      }
    </style>
  </head>

  <body>
    <div class="container-xl px-4" style="margin-top: 100px; margin-bottom: 100px;">

      <hr class="mt-0 mb-4">
      <div class="row">



        <div class="col-xl-8">
          <!-- Account details card-->
          <div class="card mb-4">
            <div class="card-header">Billing address</div>
            <div class="card-body mb-3">

              {{!-- <div class="dropdown mt-3 mb-4 border p-3">
                <button class=" dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown"
                  aria-haspopup="true" aria-expanded="false">
                  Choose an address
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                  {{#each addressData}}
                  <p class="dropdown-item">{{this.adressLine1}}</p>
                  <input type="hidden" name="addressId" value="{{this._id}}">
                  {{/each}}

                </div>
              </div> --}}


              <select id="selectedAddress" class="form-select form-select-lg mb-3 p-3"
                aria-label=".form-select-lg example">
                {{!-- <option selected>Select an address</option> --}}
                {{#each addressData}}
                <option value="{{this._id}}">{{this.adressLine1}}</option>
                {{/each}}
              </select>
              

              {{!-- <div style="text-decoration: none; ">
                <a style="text-decoration: none; font-size: medium; " class="mb-4" href="#">Add new address +</a>
              </div> --}}

              {{!-- modal --}}



              <a href="/add-checkoutaddress">Add new Address +</a>
              <!-- Button trigger modal -->
              {{!-- <div class="card-body border pb-3 pt-2">
                <button type="button" class="mt-2 text-primary" data-toggle="modal" data-target="#exampleModal">
                  Add new Address +
                </button>
              </div> --}}

              <!-- Modal -->
              <div class="modal fade" id="exampleModal" tabindex="-10" role="dialog" aria-labelledby="exampleModalLabel"
                aria-hidden="true">
                <div class="modal-dialog" role="document">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="exampleModalLabel">Address Form</h5>
                      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                      </button>
                    </div>



                    {{!-- modal form --}}


                    <div class="modal-body">
                      <div class="container">
                        <div class="row justify-content-center">
                          <div class=" ">
                            <div class="card login-form ">
                              <div class="card-header bg-white border-0">
                                <h3 class="text-center mb-0"></h3>
                              </div>
                              <div class="card-body ">
                              
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="modal-footer">
                      <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      {{!-- <button type="button" class="btn btn-primary">Save changes</button> --}}
                    </div>
                  </div>
                </div>
              </div>
            </div>


          </div>

          <div class="card mb-4">
            <div class="card-header">Payment Details</div>
            <div class="card-body">
              
              <h6 class="mb-3">Choose a payment method</h6>
              <div class="form-check mt-4">
                <input class="form-check-input" type="radio" name="payment_option" value="cash-on-delivery"
                  id="cash-on-delivery">
                <label class="form-check-label" for="flexRadioDefault1">
                  Cash On Delivery
                </label>
              </div>
             <div class="form-check mt-3 mb-3">
                <input class="form-check-input" type="radio" name="payment_option" value="razorpay" id="razorpay">
                <label class="form-check-label" for="flexRadioDefault2">
                  Razor Pay
                </label>
              </div>
              <div class="form-check mt-3 mb-3">
                <input class="form-check-input" type="radio" name="payment_option" value="wallet" id="wallet">
                <label class="form-check-label" for="flexRadioDefault2">
                  Wallet
                </label>
              </div>
              <div class="col-lg-6 col-md-6 mb-3 mb-md-0">
                <div class="coupon field_form input-group">
                  <input type="text" id="coupon" value="" class="form-control form-control-sm" placeholder="Enter Coupon Code..">
                  <div class="input-group-append">
                    <button id="couponBtn" onclick="toggleCoupon()" class="btn btn-fill-out btn-sm" type="button">Apply Coupon</button>

                  </div>
                </div>
                
              </div>
              <div class="text-center m-2" style="color: red;" id="couponMsg"> </div>
              <p class="text-center m-2" style="color: green;" id="sCouponMsg"> </p>
              <div class="bg-dark text-white p-15 rounded ml-3" style="width: fit-content;">
                <p class="my-2 mx-2" style="font-size: smaller;">Available Balance : <strong>₹<span
                      id="update_wallet">{{userData.wallet}}</span> </strong></p>
                <input type="hidden" value="{{userData.wallet}}" name="wallet">
              </div>
            </div>
          </div>
          <span id="order_button">
         <button onclick="placeOrder()" class="btn btn-fill-out btn-addtocart" type="button">
            <i class="icon-basket-loaded"></i> Place Order</button>

          </span>
        </div>


        <div class="col-xl-4">
          <!-- Profile picture card-->
          <div class="card mb-4 mb-xl-0">
            {{!-- <div class="card-header">Your cart</div> --}}

            <h4 class="d-flex justify-content-between align-items-center mb-3 card-header">
              <span class=" text-muted">Your cart</span>
              <span class="badge badge-secondary badge-pill"></span>
            </h4>
            
            <ul class="list-group mb-3">
              {{#each cart}}
              <li class="list-group-item d-flex justify-content-between lh-condensed">
                <div>
                  <h6 class="my-0">{{this.product.name}} </h6>
                  {{!-- <small class="text-muted">{{this.quantity}} * ${{this.product.price }} </small> --}}
                </div>
                <span class="text-muted"> {{this.quantity }} x ₹ {{this.product.price }} </span>
              </li>
              {{/each}}
              {{!-- <li class="list-group-item d-flex justify-content-between lh-condensed">
                <div>
                  <h6 class="my-0">Second product</h6>
                  <small class="text-muted">Brief description</small>
                </div>
                <span class="text-muted">$8</span>
              </li> --}}
              {{!-- <li class="list-group-item d-flex justify-content-between lh-condensed">
                <div>
                  <h6 class="my-0">Third item</h6>
                  <small class="text-muted">Brief description</small>
                </div>
                <span class="text-muted">$5</span>
              </li> --}}
                 <li class="list-group-item d-flex justify-content-between bg-light">
                <div class="text-success">
                  <h6 class="my-0">Coupon code</h6>
                  <span id="coupuon_code">
                    <small></small>
                  </span>
                </div>
                <span id="discount_amt">
                  <span class="text-success"></span>
                </span>
              </li>
           
              <li class="list-group-item d-flex justify-content-between">
                <span>Total (INR)</span>
                {{!-- <span id="new_sub_total">
                  <span id="total">₹ {{subTotal}}</span>
                </span> --}}
                <span id="new_total">₹ {{subTotal}}</span>
                <input id="subTotal" hidden name="subTotal" value="{{subTotal}}" >
               
              </li>

            </ul>


            </div>
          </div>
        </div>

      </div>
    </div>
    </div>
  </body>

  </html>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.18/dist/sweetalert2.all.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/AlertifyJS/1.13.1/alertify.min.js"></script>

  
    
  <script>
    const kkk = ()=>{
      window.alert("clk")
       document.getElementById('subTotal').value = 10
    }
    let couponData
    let couponEl
    let newTotal
    let subTotal
    let updateWallet
    const originalSubtotal = subTotal = Number(document.getElementsByName('subTotal')[0].value)

    /*
     const cashOnDelivery = document.getElementById('cash-on-delivery');
      const razorpay = document.getElementById('razorpay');
    
      cashOnDelivery.addEventListener('change', handleCheckboxChange);
      razorpay.addEventListener('change', handleCheckboxChange); */

    const paymentOption = document.querySelectorAll('input[name="payment_option"]');

    let paymentMethod = null;

    paymentOption.forEach((checkbox) => {
      checkbox.addEventListener('change', () => {
        if (checkbox.checked) {
          paymentMethod = checkbox.value
          console.log("User selected " + checkbox.value);
          console.log(paymentMethod, 'payment method..........')
        } else {
          console.log("User unchecked " + checkbox.value);
        }
      });
    });


    const placeOrder = () => {
        
      if (paymentMethod === 'cash-on-delivery') {
        Cod()
      } else if (paymentMethod === "razorpay") {
        online()
      } else if (paymentMethod === 'wallet') {
        useWallet()
      } else {
        console.log('Invalid payment method.')
      }
    }

    const useWallet = () => {
      const wallet = document.getElementsByName('wallet')[0].value
      subTotal = Number(document.getElementsByName('subTotal')[0].value)
      console.log(wallet, 'walletttttttttttt', subTotal)

      if (wallet > subTotal) {
        updateWallet = wallet - subTotal
        console.log(updateWallet, 'my name is update wallet...........')
        Cod()
      } else {
        alertify.set('notifier', 'position', 'top-center');
        alertify.success('you dont have sufficient balance in ur wallet choose another payment method')
      }
    }


    const Cod = async () => {
       
      const selectAddress = document.querySelector('#selectedAddress').value
      subTotal = Number(document.getElementsByName('subTotal')[0].value)
      couponEl = document.getElementById('coupon').value;
      const datas = await fetch('/place_order', {
        method: 'POST',
        headers: {
          'Content-Type': "application/json",
        },
        body: JSON.stringify({
          selectedAddress: selectAddress,
          selectedPayment: paymentMethod,
          amount: subTotal,
          couponData: couponData,
          couponName: couponEl,
          updateWallet: updateWallet,
          couponVal: couponEl
        })
      })
       
      const placeOrderData = await datas.json()
      console.log(placeOrderData + 'cheking here......now')
      if (placeOrderData) {
        console.log(' hiiii am from place order data')
        const wallet = document.getElementById('update_wallet').innerText = updateWallet

        window.location.href = '/order_sucess'
      }
    }


    const online = () => {
      subTotal = Number(document.getElementsByName('subTotal')[0].value)
      var options = {
        "key": "rzp_test_Ernm0SK2wP94Mz", // Enter the Key ID generated from the Dashboard
        "amount": subTotal * 100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
        "currency": "INR",

        /*"name": "Acme Corp", //your business name
        "description": "Test Transaction",
        "image": "https://example.com/your_logo",*/

        "order_id": undefined, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
        "handler": function (response) {
          Cod()
        },
      };
      var rzp1 = new Razorpay(options);
      rzp1.open();
    }




    let couponStatus


    const setCouponStatus = (msg, id, color) => {
      id.innerHTML = `<p style="color: ${color}">${msg}</p>`;
      id.style.display = 'block';
      setTimeout(() => {
        id.style.display = 'none';
        id.innerHTML = '';
      }, 5000);
    };

let isCouponApplied = false; // Initially, no coupon is applied
  const toggleCoupon = () => {
   if (isCouponApplied) {
      removeCoupon();
   } else {
      validateCoupon();
   }
};

    const validateCoupon = async () => {
     
      try {

           if (isCouponApplied) {
      removeCoupon();
      return;
   }
        couponEl = document.getElementById('coupon').value;
        subTotal = Number(document.getElementsByName('subTotal')[0].value);
        console.log(couponEl, "couponValue", subTotal, "subtotal")
        const response = await fetch('/validate_coupon', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            couponVal: couponEl,
            subTotal: subTotal
          })
        });
        console.log("hii from coupon status")
        couponData = await response.json();
        console.log("12222233", couponData, "CouponData12333")

        if (couponData === 'invalid') {
          setCouponStatus('Invalid coupon', document.getElementById('couponMsg'), 'red');
          console.log("invaliddd")
        }
        else if (couponData === 'expired') {
          setCouponStatus('Coupon has expired', document.getElementById('couponMsg'), 'red');
          console.log('expireddd')
        }
          else if (couponData.message === 'amount less') {
          setCouponStatus(`Amount should be greater than ${couponData.minAmount}`, document.getElementById('couponMsg'), 'red');
          console.log('expireddd')
        }
        else if (couponData === 'already used') {
          setCouponStatus('Coupon already used', document.getElementById('couponMsg'), 'red');
          console.log("usedddd")
        }
        else if (couponData.succes === 'succes') {
          console.log('am from coupon sucesssss')
          setCouponStatus('Coupon applied successfully', document.getElementById('sCouponMsg'), 'green');

          console.log('Discount Amount:', couponData.discountAmt);
          console.log('New Total:', couponData.newTotal);
          console.log('Discount:', couponData.discount);
          console.log("Coupom Code addedSuccefullyyyyyy")
 

          // Update the new total
          document.getElementById('new_total').innerHTML = `<strong>₹${couponData.newTotal}</strong>`;
          subTotal = Number(couponData.newTotal);
          console.log(subTotal, "subtotal from newtotal");



          // Update the content of the coupon code and discount amount spans
          document.getElementById('coupuon_code').querySelector('small').innerHTML = `<small>${couponEl}</small>`;
         
          document.querySelector('#discount_amt').innerHTML = `<span class="text-success">-₹${couponData.discountAmt}</span>`;
          document.getElementById('subTotal').value = couponData.newTotal
          console.log(subTotal, "subtotal from newtotal");

        }
 document.getElementById('couponBtn').textContent = 'Remove Coupon';
   isCouponApplied = true;

      } catch (error) {
        console.error('Error:', error);
      }
    };

    const removeCoupon = () => {
   // Reset coupon-related information (similar to the previous code)
   document.getElementById('coupuon_code').querySelector('small').innerHTML = '';
   document.querySelector('#discount_amt').innerHTML = '';
   document.getElementById('coupon').value = ''; // Clear the coupon input field
   document.getElementById('couponMsg').innerHTML = ''; // Clear any coupon messages

   // Update the total amount (assuming the original subtotal is stored in a variable called originalSubtotal)
  // const originalSubtotal = Number(document.getElementsByName('subTotal')[0].value);
   document.getElementById('new_total').innerHTML = `<strong>₹${originalSubtotal}</strong>`;
   document.getElementById('subTotal').value = originalSubtotal;
   

   // Change the button text back to "Apply Coupon"
   document.getElementById('couponBtn').textContent = 'Apply Coupon';
   setCouponStatus('Coupon has been removed', document.getElementById('sCouponMsg'), 'red');
   isCouponApplied = false;
};
  </script>









  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
{{>footer}}